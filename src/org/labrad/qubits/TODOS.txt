- construct memory and SRAM for each fpga that will be run (before deconvolution)
  so that we don't run spurious sequences on partially used boards.
- Microwaves on unused boards should be turned off, so they don't conflict.

- currently, channels deconvolve themselves, and then when building SRAM, boards start with zeros and fill
  in data from all the channels they know about.  Channels in turn return zeros whenever they have not been given
  any data for a particular block.  This is not the correct behavior when things must be deconvolved, however.
  What should be done instead is that the FPGA boards should do the deconvolving, and they request data from the
  channels _before_ the deconvolution, filling in zeros as needed.
  
- request a block from a channel (before deconvolution), empty blocks get created where none have been set.
  - these blocks are stored (so that they only need to be deconvolved once, for example)
- FpgaModels need to be assigned dummy channels for the case where they don't have an externally-accessible channel, but will run
  
- add timing data postprocessing options (e.g. cutoffs, deinterlace, multi-qubit combine, discard all but 000..., etc.)
