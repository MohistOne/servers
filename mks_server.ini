[info]
name = MKS Gauge Server
version = 1.0
description = 

# The name that will be given to a new instance of this server
# when it is launched on the Node.
#
# This name can contain environment variables in the form %VAR%.
# The actual environment values will be substituted in when the
# server is started.  By default, the instance name is the same
# as the server name.  Note that server names must be unique across
# the entire LabRAD system.  So if you want to be able to run
# a copy of a server on, say, each node, the instance name must
# contain the %LABRADNODE% environment variable, so that each
# running instance gets a unique name when launched.

#instancename = %LABRADNODE% Direct Ethernet



[startup]

# The command line to invoke this server.  This command will
# be executed from the directory in which the config file is
# located, so relative paths are okay if the server executable
# is in the same directory.
#
# Environment variables in the form %VAR% will be substituted.

cmdline = mks_server.py

# Time to wait for server to log in to LabRAD before considering
# the startup to have failed.
# 
# After launching the server process, the Node waits to see if
# the server logs in to LabRAD with the correct instance name.
# If this does not happen, the server process is killed.

timeout = 20



# NOTE: shutdown customization is not yet implemented.
# The node will simply kill processes it has launched when
# shutdown is requested.

#[shutdown]

# mode determines how the server is to be terminated
# this can be any of the following:
#     signal - sends a signal to the server process
#     setting - calls a LabRAD setting on the server
#     cmdline - runs a shell command to terminate the server

#mode = signal

# the signal to be sent (default: kill)

#signal = kill

# the command line to invoke this server
# environment variables in the form %VAR% will be substituted

#cmdline = DirectEthernet.exe

# time to wait for server to log in to LabRAD before considering
# the startup to have failed.

#timeout = 20